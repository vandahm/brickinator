# Generated by Django 5.1.6 on 2025-02-14 07:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('original_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('cropped_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('interpolated_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('quantized_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('final_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('plate_width', models.PositiveSmallIntegerField(choices=[('8', '8x8'), ('16', '16x16')])),
                ('resolution_width', models.PositiveSmallIntegerField()),
                ('resolution_height', models.PositiveSmallIntegerField()),
                ('interpolation_algorithm', models.CharField(choices=[('default', 'Browser Default'), ('average', 'Average Pooling'), ('dual_min_max', 'Dual Min Max Pooling'), ('min', 'Min Pooling'), ('max', 'Max Pooling')], max_length=20)),
                ('hue_adjustment', models.SmallIntegerField(default=0)),
                ('saturation_adjustment', models.SmallIntegerField(default=0)),
                ('value_adjustment', models.SmallIntegerField(default=0)),
                ('pixel_piece', models.CharField(choices=[('1x1_round_tile', '1x1 Round Tile'), ('1x1_round_plate', '1x1 Round Plate'), ('1x1_square_tile', '1x1 Square Tile'), ('1x1_square_plate', '1x1 Square Plate'), ('1x1_square_brick', '1x1 Square Brick'), ('variable_tile', 'Variable Tile'), ('variable_plate', 'Variable Plate'), ('variable_brick', 'Variable Brick')], max_length=50)),
                ('color_distance_function', models.CharField(choices=[('euclideanRGB', 'Euclidean RGB'), ('euclideanLAB', 'Euclidean LAB'), ('cie94', 'CIE94'), ('ciede2000', 'CIEDE2000'), ('din99o', 'DIN99o')], max_length=50)),
                ('quantization_algorithm', models.CharField(choices=[('twoPhase', '2 Phase'), ('floydSteinberg', 'Floyd-Steinberg Dithering'), ('jarvisJudiceNinkeDithering', 'Jarvis-Judice-Ninke Dithering'), ('atkinsonDithering', 'Atkinson Dithering'), ('sierraDithering', 'Sierra Dithering'), ('greedy', 'Greedy'), ('greedyWithDithering', 'Greedy Gaussian Dithering')], max_length=50)),
                ('tiebreak_techniques', models.CharField(choices=[('none', 'None'), ('random', 'Random'), ('mod2', 'Mod 2'), ('mod3', 'Mod 3'), ('mod4', 'Mod 4'), ('mod5', 'Mod 5'), ('noisymod2', 'Noisy Mod 2'), ('noisymod3', 'Noisy Mod 3'), ('noisymod4', 'Noisy Mod 4'), ('noisymod5', 'Noisy Mod 5'), ('cascadingmod', 'Cascading Mod'), ('cascadingnoisymod', 'Cascading Noisy Mod'), ('alternatingmod', 'Alternating Mod'), ('alternatingnoisymod', 'Alternating Noisy Mod')], max_length=50)),
                ('blocking_factor', models.PositiveSmallIntegerField(default=0)),
                ('piece_availability', models.JSONField(blank=True)),
                ('has_unlimited_pieces', models.BooleanField(default=True)),
                ('pieces_used', models.JSONField(blank=True)),
                ('bricklink_xml', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstructionManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rendered_pdf', models.FileField(blank=True, null=True, upload_to='instruction_manuals/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instruction_manuals', to='projects.project')),
            ],
        ),
    ]
